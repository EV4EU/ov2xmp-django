"""
Django settings for ov2xmp project.

Generated by 'django-admin startproject' using Django 4.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

from pathlib import Path
import os
from django.contrib.messages import constants as messages

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ["OV2XMP_SECRET_KEY"]

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = int(os.environ["OV2XMP_DEBUG"])

ALLOWED_HOSTS = os.environ["OV2XMP_DJANGO_ALLOWED_HOSTS"].split(",")

# Application definition
INSTALLED_APPS = [
    'daphne',
    'celery',

    "crispy_forms",
    "crispy_bootstrap5",
    'timezone_field',

    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'django_celery_results',

    'channels',
    'channels_redis',

    'rest_framework',
    'drf_spectacular',
    'oauth2_authcodeflow',

    'dashboard',
    'users',
    'chargepoint',
    'connector',
    'reservation',
    'transaction',
    'idtag',
    'tasks',
    'chargingprofile',
    'location',
    'heartbeat',
    'statusnotification',

    'api'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

    'oauth2_authcodeflow.middleware.RefreshAccessTokenMiddleware',
    'oauth2_authcodeflow.middleware.RefreshSessionMiddleware',
]

ROOT_URLCONF = 'ov2xmp.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

ASGI_APPLICATION = 'ov2xmp.asgi.application'

###########################################################################
################ A U T H E N T I C A T I O N ##############################
###########################################################################

AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
]

# === OAuth2 Settings === (https://gitlab.com/systra/qeto/lib/django-oauth2-authcodeflow)
# OIDC should be manually enabled in .env
if os.environ['OV2XMP_AUTH_OIDC_ENABLE']:
    AUTHENTICATION_BACKENDS.append('oauth2_authcodeflow.auth.AuthenticationBackend')
    OIDC_OP_DISCOVERY_DOCUMENT_URL = os.environ['OV2XMP_AUTH_OIDC_OP_DISCOVERY_DOCUMENT_URL']
    OIDC_RP_CLIENT_ID = os.environ['OV2XMP_AUTH_OIDC_RP_CLIENT_ID']
    OIDC_RP_CLIENT_SECRET = os.environ['OV2XMP_AUTH_OIDC_RP_CLIENT_SECRET']
    SESSION_COOKIE_SECURE = True
    OIDC_CREATE_USER = True

# === LDAP Settings ===
# LDAP should be manually enabled in .env
# TODO: Cross-check the settings with similar projects. Why we use a CustomLDAPBackend?
if os.environ['OV2XMP_AUTH_LDAP_ENABLE']:
    import ldap

    # The custom LDAP backend is used, instead of the default
    AUTHENTICATION_BACKENDS.append('ov2xmp.ldap.CustomLDAPBackend')

     # The following format is expected: ldap://ldap.example.com
    AUTH_LDAP_SERVER_URI = os.environ['OV2XMP_AUTH_LDAP_SERVER_URI']

    # Read-only user that is able to bind and search for other users. Some LDAP servers support anonymous login, however, we assume that a 
    # bind account must be provided.
    AUTH_LDAP_BIND_DN = os.environ['OV2XMP_AUTH_LDAP_BIND_DN']
    AUTH_LDAP_BIND_PASSWORD = os.environ['OV2XMP_AUTH_LDAP_BIND_PASSWORD']
    AUTH_LDAP_USER_DN_TEMPLATE = "CN=%(user)s," + os.environ['OV2XMP_AUTH_LDAP_SEARCH_DN']

    # Enforce TLS - We do not accept transmitting LDAP credentials without TLS!
    AUTH_LDAP_START_TLS = True

    # We disable cerificate verification, because many LDAP servers usually have self-signed certificates. 
    AUTH_LDAP_GLOBAL_OPTIONS = {
        ldap.OPT_X_TLS_REQUIRE_CERT: ldap.OPT_X_TLS_NEVER   # type: ignore
    }

    # Maps basic user attributes with LDAP fields
    AUTH_LDAP_USER_ATTR_MAP = {
        # AUTH_LDAP_USER_ATTR_MAP_FIRSTNAME is usually `givenName`.
        "first_name": os.environ['OV2XMP_AUTH_LDAP_USER_ATTR_MAP_FIRSTNAME'],  
        # AUTH_LDAP_USER_ATTR_MAP_LASTNAME is usually `sn`.
        "last_name": os.environ['OV2XMP_AUTH_LDAP_USER_ATTR_MAP_LASTNAME'],
        # AUTH_LDAP_USER_ATTR_MAP_EMAIL is usually `mail`.
        "email": os.environ['OV2XMP_AUTH_LDAP_USER_ATTR_MAP_EMAIL']
    }

###########################################################################
###########################################################################

# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': os.environ['OV2XMP_POSTGRES_DB'],                      
        'USER': os.environ['OV2XMP_POSTGRES_USER'],
        'PASSWORD': os.environ['OV2XMP_POSTGRES_PASSWORD'],
        'HOST': os.environ['OV2XMP_POSTGRES_HOST'],
        'PORT': os.environ['OV2XMP_POSTGRES_PORT'],
    }
}


# Channels

CHANNEL_LAYERS = {
    "default": {
        "BACKEND": "channels_redis.pubsub.RedisPubSubChannelLayer",
        "CONFIG": {
            "hosts": [
                (os.environ['OV2XMP_REDIS_BROKER_HOST'], int(os.environ['OV2XMP_REDIS_BROKER_PORT']))
            ],
        },
    },
}
os.environ["DJANGO_ALLOW_ASYNC_UNSAFE"] = "true"


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/
STATIC_ROOT = os.path.join(BASE_DIR, "static/")
STATIC_URL = 'static/'

STATICFILES_FINDERS = (
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
    'django.contrib.staticfiles.finders.DefaultStorageFinder',
)

CRISPY_ALLOWED_TEMPLATE_PACKS = "bootstrap5"
CRISPY_TEMPLATE_PACK = "bootstrap5"

MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = '/media/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

LOGIN_REDIRECT_URL = "/"
LOGOUT_REDIRECT_URL = "login"
LOGIN_URL = 'login'

MESSAGE_TAGS = {
    messages.INFO: 'primary',
    messages.DEBUG: 'primary',
    messages.ERROR: 'danger',
}


# === Celery settings ===
CELERY_BROKER_URL = "redis://" + os.environ['OV2XMP_REDIS_BROKER_HOST'] + ":" + os.environ['OV2XMP_REDIS_BROKER_PORT'] + "/"
CELERY_RESULT_BACKEND = 'django-db'
CELERY_CACHE_BACKEND = 'django-cache'
CELERY_ENABLE_UTC = True
CELERY_TASK_SERIALIZER = 'json'
CELERY_ACCEPT_CONTENT = ['json']
CELERY_RESULT_EXTENDED = True


# === SMTP settings ===
#EMAIL_USE_TLS = os.environ['OV2XMP_REDIS_BROKER_HOST']
#EMAIL_HOST = os.environ['OV2XMP_REDIS_BROKER_HOST']
#EMAIL_HOST_USER = os.environ['OV2XMP_REDIS_BROKER_HOST']
#EMAIL_HOST_PASSWORD = os.environ['OV2XMP_REDIS_BROKER_HOST']
#EMAIL_PORT = os.environ['OV2XMP_REDIS_BROKER_HOST']

SECURE_PROXY_SSL_HEADER = ("HTTP_X_FORWARDED_PROTO", "https")

# === DRF Settings ===

REST_FRAMEWORK = {
    # YOUR SETTINGS
    'DEFAULT_SCHEMA_CLASS': 'drf_spectacular.openapi.AutoSchema',
}

SPECTACULAR_SETTINGS = {
    'TITLE': 'O-V2X-MP REST API',
    'DESCRIPTION': 'The Open V2X Management Platform of the EV4EU project.',
    'VERSION': '1.0.0',
    'SERVE_INCLUDE_SCHEMA': False,
    # OTHER SETTINGS
}


'''
# === Logging settings ===
# If Django does not have write permissions in `/var/log/ov2xmp/`, Django cannot start.
if not os.path.exists('/var/log/ov2xmp/'):
    os.makedirs('/var/log/ov2xmp/')

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'standard': {
            'format': '%(asctime)s [%(levelname)s] %(name)s: %(message)s'
        },
    },
    'handlers': {
        'default': {
            'level': 'DEBUG',
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': '/var/log/ov2xmp/ov2xmp.log',
            'maxBytes': 1024*1024*10,  # 10 MB
            'backupCount': 5,
            'formatter': 'standard',
        },
        'request_handler': {
            'level': 'DEBUG',
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': '/var/log/ov2xmp/django_requests.log',
            'maxBytes': 1024*1024*10,  # 10 MB
            'backupCount': 5,
            'formatter': 'standard',
        }
    },
    'loggers': {
        '': {
            'handlers': ['default'],
            'level': 'DEBUG',
            'propagate': True
        },
        'django.request': {
            'handlers': ['request_handler'],
            'level': 'DEBUG',
            'propagate': False
        },
        'django_auth_ldap': {
            'level': 'DEBUG', 
            'handlers': ['default']
        }
    },
}
'''
